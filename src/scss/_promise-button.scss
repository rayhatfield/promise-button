.promise-button {
	$bgcolor: hsla(88, 65%, 65%, 1);
	font-size: 1rem;
	&:focus {
		outline: none;
	}
	font-family: 'Roboto', sans-serif;
	background: linear-gradient($bgcolor, darken($bgcolor, 20%)) no-repeat;
	-webkit-appearance: none;
	border: none;
	position: relative;
	margin: .5rem;
	padding: 0;
	overflow: hidden;
	border-radius:3px;
	text-transform: none;
	letter-spacing: 0;
	box-shadow: 0px 1px 3px hsla(0,0%,0%,0.7);
	border: 1px solid rgba(0,0,0,0.2);
	font-weight: 400;
	color: rgba(255, 255, 255, .9);
	text-shadow: 0 2px 2px rgba(0,0,0,.2);
	padding: 0.5em 1.5em;
	white-space: nowrap;

	&:active {
		background: darken($bgcolor,20%);
	}

	& > .sizer {
		visibility: hidden;
	}


	& > ul {
		list-style-type: none;
		font-size: inherit;
		margin: 0;
		padding: 0;
		width: 100%;
		height: 100%; //force the flex calculations to be based on this element. (100% refers to the button's height)
		position: absolute;
		top: 0;
		left: 0;
		transition: top .25s ease-in;

		//both the UL and the LI's need to be flex boxes.
		& , & > li {
			display: flex;
			align-content: center;
			align-items: center;
			flex-direction: column;
		}

		& > li {
			&:first-child > span {
				position: absolute;
				top: 50%;
				left: 50%;
				transform: translate3d(-50%, -50%, 0);
			}
			flex: 0 0 100%; // account for the border width, 100% here refers to the UL's height.
			overflow: hidden;
			margin: 0;
			padding: 0;

			&.processing {
				box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.7);
				background: rgba(240, 240, 240, 1);
				background: linear-gradient(#eee, white);
    			width: 100%;
				& > ul.tinyloader {
					align-items: center;
					display: flex;
					flex: 1 1 auto;
				}
			}

			&.finished {
				position: relative;
				width: 100%;
				height: 100%;
				&.icon-checkmark::before {
    				position: absolute;
    				top: 50%;
    				transform: translate3D(-50%, -55%, 0);
    				left: 50%;
				}
			}
		}
	}

	&.processing {
		& > ul {
			transform: translate3d(0, -100%, 0);
			transition: transform .25s ease-in;
		}
	}

	&.finished > ul {
		transform: translate3d(0, -200%, 0);
		transition: transform .25s ease-in;
	}

}
